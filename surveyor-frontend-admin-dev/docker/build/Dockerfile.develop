ARG BUILDER_IMAGE=node:20.18-slim
ARG CONTAINER_IMAGE=nginx:alpine3.20-slim


############################## Build Stage ##############################
FROM ${BUILDER_IMAGE} AS build-stage

ARG APP_VERSION=
ARG APP_MODE=deploy
ARG APP_ENV=
# ARG BASE_URL=/
# ARG EZROUTE_SERVER_ENDPOINT=
ARG CMD_BUILD="npm run build:nginx:${APP_ENV}"

ENV VITE_APP_VERSION=${APP_VERSION}
ENV VITE_APP_ENV=${APP_ENV}
# ENV VITE_EZROUTE_SERVER_ENDPOINT=${EZROUTE_SERVER_ENDPOINT}

WORKDIR /app
COPY ./package.json /app/package.json
COPY ./package-lock.json /app/package-lock.json

RUN echo "### Build Stage ###"
RUN echo "APP_VERSION => ${APP_VERSION}"
RUN echo "APP_MODE => ${APP_MODE}"
RUN echo "APP_ENV => ${APP_ENV}"
# RUN echo "BASE_URL => ${BASE_URL}"
# RUN echo "EZROUTE_SERVER_ENDPOINT => ${EZROUTE_SERVER_ENDPOINT}"
RUN echo "CMD_BUILD => ${CMD_BUILD}"
RUN npm install
COPY . .
RUN pwd && ls -al
RUN ${CMD_BUILD}
############################## Build Stage ##############################


############################## Deploy Stage ##############################
FROM ${CONTAINER_IMAGE} AS deploy-stage

COPY --from=build-stage /app/dist /usr/share/nginx/html/web-console

RUN rm /etc/nginx/conf.d/default.conf
COPY docker/build/nginx.conf /etc/nginx/conf.d/default.conf
############################## Deploy Stage ##############################